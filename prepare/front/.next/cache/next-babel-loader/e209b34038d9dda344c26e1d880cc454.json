{"ast":null,"code":"import { all, fork, delay, put, takeLatest, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOAD_MY_INFO_SUCCESS, LOAD_MY_INFO_FAILURE, LOAD_MY_INFO_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE, FOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, CHANGE_NICKNAME_SUCCESS, CHANGE_NICKNAME_FAILURE, CHANGE_NICKNAME_REQUEST } from '../reducers/user';\n\nfunction changeNicknameAPI() {\n  return axios.get('/user');\n}\n\nfunction* changeNickname(action) {\n  try {\n    const result = yield call(changeNicknameAPI, action.data);\n    yield put({\n      type: CHANGE_NICKNAME_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: CHANGE_NICKNAME_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadUserAPI() {\n  return axios.get('/user');\n}\n\nfunction* loadUser(action) {\n  try {\n    const result = yield call(loadUserAPI, action.data);\n    yield put({\n      type: LOAD_MY_INFO_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_MY_INFO_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logInAPI(data) {\n  return axios.post('/user/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post('/user/logout');\n}\n\nfunction* logOut() {\n  try {\n    yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signUpAPI(data) {\n  return axios.post('/user', data);\n}\n\nfunction* signUp(action) {\n  try {\n    const result = yield call(signUpAPI, action.data);\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction followAPI() {\n  return axios.post('/api/follow');\n}\n\nfunction* follow(action) {\n  try {\n    // const result = yield call(followAPI);\n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unfollowAPI() {\n  return axios.post('/api/unfollowAPI');\n}\n\nfunction* unfollow(action) {\n  try {\n    // const result = yield call(unfollowAPI);\n    yield delay(1000);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchChangeNickname() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n}\n\nfunction* watchLoadUser() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadUser);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchChangeNickname), fork(watchLoadUser), fork(watchFollow), fork(watchUnfollow), fork(watchLogIn), fork(watchLogOut), fork(watchSignUp)]);\n}","map":{"version":3,"sources":["/Users/gimhyeongjin/Desktop/React-NodeBird/prepare/front/sagas/user.js"],"names":["all","fork","delay","put","takeLatest","call","axios","LOAD_MY_INFO_SUCCESS","LOAD_MY_INFO_FAILURE","LOAD_MY_INFO_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","FOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","UNFOLLOW_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","LOG_OUT_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","CHANGE_NICKNAME_REQUEST","changeNicknameAPI","get","changeNickname","action","result","data","type","err","error","response","loadUserAPI","loadUser","logInAPI","post","logIn","logOutAPI","logOut","signUpAPI","signUp","console","log","followAPI","follow","unfollowAPI","unfollow","watchChangeNickname","watchLoadUser","watchFollow","watchUnfollow","watchLogIn","watchLogOut","watchSignUp","userSaga"],"mappings":"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","sourcesContent":["import { all, fork, delay, put, takeLatest, call } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport {\n  LOAD_MY_INFO_SUCCESS, LOAD_MY_INFO_FAILURE, LOAD_MY_INFO_REQUEST,\n  FOLLOW_SUCCESS, FOLLOW_FAILURE, FOLLOW_REQUEST,\n  UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST,\n  LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST,\n  LOG_OUT_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST,\n  SIGN_UP_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST,\n  CHANGE_NICKNAME_SUCCESS, CHANGE_NICKNAME_FAILURE, CHANGE_NICKNAME_REQUEST,\n} from '../reducers/user';\n\nfunction changeNicknameAPI() {\n  return axios.get('/user');\n}\n\nfunction* changeNickname(action) {\n  try {\n    const result = yield call(changeNicknameAPI, action.data);\n    yield put({\n      type: CHANGE_NICKNAME_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: CHANGE_NICKNAME_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction loadUserAPI() {\n  return axios.get('/user');\n}\n\nfunction* loadUser(action) {\n  try {\n    const result = yield call(loadUserAPI, action.data);\n    yield put({\n      type: LOAD_MY_INFO_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_MY_INFO_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction logInAPI(data) {\n  return axios.post('/user/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post('/user/logout');\n}\n\nfunction* logOut() {\n  try {\n    yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS,\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction signUpAPI(data) {\n  return axios.post('/user', data);\n}\n\nfunction* signUp(action) {\n  try {\n    const result = yield call(signUpAPI, action.data);\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS,\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction followAPI() {\n  return axios.post('/api/follow');\n}\n\nfunction* follow(action) {\n  try {\n    // const result = yield call(followAPI);\n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data,\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction unfollowAPI() {\n  return axios.post('/api/unfollowAPI');\n}\n\nfunction* unfollow(action) {\n  try {\n    // const result = yield call(unfollowAPI);\n    yield delay(1000);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data,\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* watchChangeNickname() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n}\n\nfunction* watchLoadUser() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadUser);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([\n    fork(watchChangeNickname),\n    fork(watchLoadUser),\n    fork(watchFollow),\n    fork(watchUnfollow),\n    fork(watchLogIn),\n    fork(watchLogOut),\n    fork(watchSignUp),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}