{"ast":null,"code":"import { all, fork, delay, put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { FOLLOW_SUCCESS, FOLLOW_FAILURE, FOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST } from '../reducers/user';\n\nfunction logInAPI(data) {\n  return axios.post('/api/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    // const result = yield call(logInAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post('/api/logout');\n}\n\nfunction* logOut() {\n  try {\n    // const result = yield call(logOutAPI);\n    yield delay(1000);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signUpAPI() {\n  return axios.post('/api/logout');\n}\n\nfunction* signUp() {\n  try {\n    // const result = yield call(signUpAPI);\n    yield delay(1000);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchFollow), fork(watchUnfollow), fork(watchLogIn), fork(watchLogOut), fork(watchSignUp)]);\n}","map":{"version":3,"sources":["/Users/gimhyeongjin/Desktop/React-NodeBird/prepare/front/sagas/user.js"],"names":["all","fork","delay","put","takeLatest","axios","FOLLOW_SUCCESS","FOLLOW_FAILURE","FOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","UNFOLLOW_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","LOG_OUT_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_REQUEST","logInAPI","data","post","logIn","action","type","err","error","response","logOutAPI","logOut","signUpAPI","signUp","watchFollow","follow","watchUnfollow","unfollow","watchLogIn","watchLogOut","watchSignUp","userSaga"],"mappings":"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","sourcesContent":["import { all, fork, delay, put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport {\n  FOLLOW_SUCCESS, FOLLOW_FAILURE, FOLLOW_REQUEST,\n  UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST,\n  LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST,\n  LOG_OUT_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST,\n  SIGN_UP_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST,\n} from '../reducers/user';\n\nfunction logInAPI(data) {\n  return axios.post('/api/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    // const result = yield call(logInAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: action.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post('/api/logout');\n}\n\nfunction* logOut() {\n  try {\n    // const result = yield call(logOutAPI);\n    yield delay(1000);\n    yield put({\n      type: LOG_OUT_SUCCESS,\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction signUpAPI() {\n  return axios.post('/api/logout');\n}\n\nfunction* signUp() {\n  try {\n    // const result = yield call(signUpAPI);\n    yield delay(1000);\n    yield put({\n      type: SIGN_UP_SUCCESS,\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([\n    fork(watchFollow),\n    fork(watchUnfollow),\n    fork(watchLogIn),\n    fork(watchLogOut),\n    fork(watchSignUp),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}