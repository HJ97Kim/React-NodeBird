{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nimport PostCard from '../../components/PostCard';\nimport AppLayout from '../../components/AppLayout';\n\nvar Post = function Post() {\n  var router = useRouter();\n  var id = router.query.id;\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      singlePost = _useSelector.singlePost;\n\n  return /*#__PURE__*/_jsxs(AppLayout, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsxs(\"title\", {\n        children: [singlePost.User.nickname, \"\\uB2D8\\uC758 \\uAE00\"]\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"description\",\n        content: singlePost.content\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        property: \"og:title\",\n        content: \"\".concat(singlePost.User.nickname, \"\\uB2D8\\uC758 \\uAC8C\\uC2DC\\uAE00\")\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        property: \"og:description\",\n        content: singlePost.content\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        property: \"og:image\",\n        content: singlePost.Images[0] ? singlePost.Images[0].src : 'https://nodebird.com/favicon.ico'\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        property: \"og:url\",\n        content: \"https://nodebird.com/post/\".concat(id)\n      })]\n    }), /*#__PURE__*/_jsx(PostCard, {\n      post: singlePost\n    })]\n  });\n};\n\nexport var __N_SSP = true;\nexport default Post;","map":{"version":3,"sources":["/Users/gimhyeongjin/Desktop/React-NodeBird/prepare/front/pages/post/[id].js"],"names":["React","useSelector","Head","useRouter","PostCard","AppLayout","Post","router","id","query","state","post","singlePost","User","nickname","content","Images","src"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAMA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;;AAGA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjB,MAAMC,MAAM,GAAGJ,SAAS,EAAxB;AADiB,MAETK,EAFS,GAEFD,MAAM,CAACE,KAFL,CAETD,EAFS;;AAAA,qBAGMP,WAAW,CAAC,UAACS,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAHjB;AAAA,MAGTC,UAHS,gBAGTA,UAHS;;AAKjB,sBACE,MAAC,SAAD;AAAA,4BACE,MAAC,IAAD;AAAA,8BACE;AAAA,mBACGA,UAAU,CAACC,IAAX,CAAgBC,QADnB;AAAA,QADF,eAKE;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAEF,UAAU,CAACG;AAA7C,QALF,eAME;AAAM,QAAA,QAAQ,EAAC,UAAf;AAA0B,QAAA,OAAO,YAAKH,UAAU,CAACC,IAAX,CAAgBC,QAArB;AAAjC,QANF,eAOE;AAAM,QAAA,QAAQ,EAAC,gBAAf;AAAgC,QAAA,OAAO,EAAEF,UAAU,CAACG;AAApD,QAPF,eAQE;AAAM,QAAA,QAAQ,EAAC,UAAf;AAA0B,QAAA,OAAO,EAAEH,UAAU,CAACI,MAAX,CAAkB,CAAlB,IAAuBJ,UAAU,CAACI,MAAX,CAAkB,CAAlB,EAAqBC,GAA5C,GAAkD;AAArF,QARF,eASE;AAAM,QAAA,QAAQ,EAAC,QAAf;AAAwB,QAAA,OAAO,sCAA+BT,EAA/B;AAA/B,QATF;AAAA,MADF,eAYE,KAAC,QAAD;AAAU,MAAA,IAAI,EAAEI;AAAhB,MAZF;AAAA,IADF;AAgBD,CArBD;;;AAyCA,eAAeN,IAAf","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nimport { END } from 'redux-saga';\n\nimport axios from 'axios';\nimport { LOAD_POST_REQUEST } from '../../reducers/post';\nimport wrapper from '../../store/configureStore';\nimport PostCard from '../../components/PostCard';\nimport AppLayout from '../../components/AppLayout';\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\n\nconst Post = () => {\n  const router = useRouter();\n  const { id } = router.query;\n  const { singlePost } = useSelector((state) => state.post);\n\n  return (\n    <AppLayout>\n      <Head>\n        <title>\n          {singlePost.User.nickname}\n          님의 글\n        </title>\n        <meta name=\"description\" content={singlePost.content} />\n        <meta property=\"og:title\" content={`${singlePost.User.nickname}님의 게시글`} />\n        <meta property=\"og:description\" content={singlePost.content} />\n        <meta property=\"og:image\" content={singlePost.Images[0] ? singlePost.Images[0].src : 'https://nodebird.com/favicon.ico'} />\n        <meta property=\"og:url\" content={`https://nodebird.com/post/${id}`} />\n      </Head>\n      <PostCard post={singlePost} />\n    </AppLayout>\n  );\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  console.log(context);\n  axios.defaults.headers.Cookie = '';\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST,\n  });\n  context.store.dispatch({\n    type: LOAD_POST_REQUEST,\n    data: context.params.id,\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}