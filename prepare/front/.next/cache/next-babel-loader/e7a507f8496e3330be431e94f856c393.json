{"ast":null,"code":"import { all, fork, delay, put, take, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction logInAPI(data) {\n  return axios.post('/api/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    yield delay(1000); // const result = yield call(logInAPI, action.data);\n\n    yield put({\n      type: 'LOG_IN_SUCCESS',\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_IN_FAILURE',\n      data: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post('/api/logout');\n}\n\nfunction* logOut() {\n  try {\n    yield delay(1000); // const result = yield call(logOutAPI);\n\n    yield put({\n      type: 'LOG_OUT_SUCCESS'\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_OUT_FAILURE',\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  takeLatest(yield take('LOG_IN_REQUEST', logIn));\n}\n\nfunction* watchLogOut() {\n  takeLatest(yield take('LOG_OUT_REQUEST', logOut));\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut)]);\n}","map":{"version":3,"sources":["/Users/gimhyeongjin/Desktop/React-NodeBird/prepare/front/sagas/user.js"],"names":["all","fork","delay","put","take","takeLatest","axios","logInAPI","data","post","logIn","action","type","err","response","logOutAPI","logOut","watchLogIn","watchLogOut","userSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,KAApB,EAA2BC,GAA3B,EAAgCC,IAAhC,EAAsCC,UAAtC,QAAwD,oBAAxD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;AACtB,SAAOF,KAAK,CAACG,IAAN,CAAW,YAAX,EAAyBD,IAAzB,CAAP;AACD;;AAED,UAAUE,KAAV,CAAgBC,MAAhB,EAAwB;AACtB,MAAI;AACF,UAAMT,KAAK,CAAC,IAAD,CAAX,CADE,CAEF;;AACA,UAAMC,GAAG,CAAC;AACRS,MAAAA,IAAI,EAAE,gBADE;AAERJ,MAAAA,IAAI,EAAEG,MAAM,CAACH;AAFL,KAAD,CAAT;AAID,GAPD,CAOE,OAAOK,GAAP,EAAY;AACZ,UAAMV,GAAG,CAAC;AACRS,MAAAA,IAAI,EAAE,gBADE;AAERJ,MAAAA,IAAI,EAAEK,GAAG,CAACC,QAAJ,CAAaN;AAFX,KAAD,CAAT;AAID;AACF;;AAED,SAASO,SAAT,GAAqB;AACnB,SAAOT,KAAK,CAACG,IAAN,CAAW,aAAX,CAAP;AACD;;AAED,UAAUO,MAAV,GAAmB;AACjB,MAAI;AACF,UAAMd,KAAK,CAAC,IAAD,CAAX,CADE,CAEF;;AACA,UAAMC,GAAG,CAAC;AACRS,MAAAA,IAAI,EAAE;AADE,KAAD,CAAT;AAGD,GAND,CAME,OAAOC,GAAP,EAAY;AACZ,UAAMV,GAAG,CAAC;AACRS,MAAAA,IAAI,EAAE,iBADE;AAERJ,MAAAA,IAAI,EAAEK,GAAG,CAACC,QAAJ,CAAaN;AAFX,KAAD,CAAT;AAID;AACF;;AAED,UAAUS,UAAV,GAAuB;AACrBZ,EAAAA,UAAU,CAAC,MAAMD,IAAI,CAAC,gBAAD,EAAmBM,KAAnB,CAAX,CAAV;AACD;;AAED,UAAUQ,WAAV,GAAwB;AACtBb,EAAAA,UAAU,CAAC,MAAMD,IAAI,CAAC,iBAAD,EAAoBY,MAApB,CAAX,CAAV;AACD;;AAED,eAAe,UAAUG,QAAV,GAAqB;AAClC,QAAMnB,GAAG,CAAC,CACRC,IAAI,CAACgB,UAAD,CADI,EAERhB,IAAI,CAACiB,WAAD,CAFI,CAAD,CAAT;AAID","sourcesContent":["import { all, fork, delay, put, take, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction logInAPI(data) {\n  return axios.post('/api/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    yield delay(1000);\n    // const result = yield call(logInAPI, action.data);\n    yield put({\n      type: 'LOG_IN_SUCCESS',\n      data: action.data,\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_IN_FAILURE',\n      data: err.response.data,\n    })\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post('/api/logout');\n}\n\nfunction* logOut() {\n  try {\n    yield delay(1000);\n    // const result = yield call(logOutAPI);\n    yield put({\n      type: 'LOG_OUT_SUCCESS',\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_OUT_FAILURE',\n      data: err.response.data,\n    })\n  }\n}\n\nfunction* watchLogIn() {\n  takeLatest(yield take('LOG_IN_REQUEST', logIn));\n}\n\nfunction* watchLogOut() {\n  takeLatest(yield take('LOG_OUT_REQUEST', logOut));\n}\n\nexport default function* userSaga() {\n  yield all([\n    fork(watchLogIn),\n    fork(watchLogOut),\n  ])\n}"]},"metadata":{},"sourceType":"module"}