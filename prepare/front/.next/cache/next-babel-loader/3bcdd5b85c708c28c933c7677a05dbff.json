{"ast":null,"code":"import { all, fork, delay, put, takeLatest, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { FOLLOW_SUCCESS, FOLLOW_FAILURE, FOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, LOAD_MY_INFO_SUCCESS, LOAD_MY_INFO_FAILURE, LOAD_MY_INFO_REQUEST } from '../reducers/user';\n\nfunction loadUserAPI() {\n  return axios.post('/user');\n}\n\nfunction* loadUser(action) {\n  try {\n    const result = yield call(loadUserAPI, action.data);\n    yield put({\n      type: LOAD_MY_INFO_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_MY_INFO_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logInAPI(data) {\n  return axios.post('/user/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post('/user/logout');\n}\n\nfunction* logOut() {\n  try {\n    yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signUpAPI(data) {\n  return axios.post('/user', data);\n}\n\nfunction* signUp(action) {\n  try {\n    const result = yield call(signUpAPI, action.data);\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction followAPI() {\n  return axios.post('/api/follow');\n}\n\nfunction* follow(action) {\n  try {\n    // const result = yield call(followAPI);\n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unfollowAPI() {\n  return axios.post('/api/unfollowAPI');\n}\n\nfunction* unfollow(action) {\n  try {\n    // const result = yield call(unfollowAPI);\n    yield delay(1000);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLoadUser() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadUser);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLoadUser), fork(watchFollow), fork(watchUnfollow), fork(watchLogIn), fork(watchLogOut), fork(watchSignUp)]);\n}","map":{"version":3,"sources":["/Users/gimhyeongjin/Desktop/React-NodeBird/prepare/front/sagas/user.js"],"names":["all","fork","delay","put","takeLatest","call","axios","FOLLOW_SUCCESS","FOLLOW_FAILURE","FOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","UNFOLLOW_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","LOG_OUT_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_REQUEST","LOAD_MY_INFO_SUCCESS","LOAD_MY_INFO_FAILURE","LOAD_MY_INFO_REQUEST","loadUserAPI","post","loadUser","action","result","data","type","err","error","response","logInAPI","logIn","logOutAPI","logOut","signUpAPI","signUp","console","log","followAPI","follow","unfollowAPI","unfollow","watchLoadUser","watchFollow","watchUnfollow","watchLogIn","watchLogOut","watchSignUp","userSaga"],"mappings":"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","sourcesContent":["import { all, fork, delay, put, takeLatest, call } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport {\n  FOLLOW_SUCCESS, FOLLOW_FAILURE, FOLLOW_REQUEST,\n  UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST,\n  LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST,\n  LOG_OUT_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST,\n  SIGN_UP_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST,\n  LOAD_MY_INFO_SUCCESS, LOAD_MY_INFO_FAILURE, LOAD_MY_INFO_REQUEST,\n} from '../reducers/user';\n\nfunction loadUserAPI() {\n  return axios.post('/user');\n}\n\nfunction* loadUser(action) {\n  try {\n    const result = yield call(loadUserAPI, action.data);\n    yield put({\n      type: LOAD_MY_INFO_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_MY_INFO_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction logInAPI(data) {\n  return axios.post('/user/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post('/user/logout');\n}\n\nfunction* logOut() {\n  try {\n    yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS,\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction signUpAPI(data) {\n  return axios.post('/user', data);\n}\n\nfunction* signUp(action) {\n  try {\n    const result = yield call(signUpAPI, action.data);\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS,\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction followAPI() {\n  return axios.post('/api/follow');\n}\n\nfunction* follow(action) {\n  try {\n    // const result = yield call(followAPI);\n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data,\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction unfollowAPI() {\n  return axios.post('/api/unfollowAPI');\n}\n\nfunction* unfollow(action) {\n  try {\n    // const result = yield call(unfollowAPI);\n    yield delay(1000);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data,\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* watchLoadUser() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadUser);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([\n    fork(watchLoadUser),\n    fork(watchFollow),\n    fork(watchUnfollow),\n    fork(watchLogIn),\n    fork(watchLogOut),\n    fork(watchSignUp),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}