{"ast":null,"code":"import produce from 'immer';\nexport const initialState = {\n  loadUserLoading: false,\n  // 유저 정보 가져오기 시도중\n  loadUserDone: false,\n  loadUserError: null,\n  followLoading: false,\n  // 팔로우 시도중\n  followDone: false,\n  followError: null,\n  unfollowLoading: false,\n  // 언팔로우 시도중\n  unfollowDone: false,\n  unfollowError: null,\n  logInLoading: false,\n  // 로그인 시도중\n  logInDone: false,\n  logInError: null,\n  logOutLoading: false,\n  // 로그아웃 시도중\n  logOutDone: false,\n  logOutError: null,\n  signUpLoading: false,\n  // 회원가입 시도중\n  signUpDone: false,\n  signUpError: null,\n  changeNicknameLoading: false,\n  // 닉네임 변경 시도중\n  changeNicknameDone: false,\n  changeNicknameError: null,\n  loadFollowingsLoading: false,\n  // 팔로윙 목록 불러오기 시도중\n  loadFollowingsDone: false,\n  loadFollowingsError: null,\n  loadFollowersLoading: false,\n  // 팔로워 목록 불러오기 시도중\n  loadFollowersDone: false,\n  loadFollowersError: null,\n  removeFollowerLoading: false,\n  // 팔로워 제거 시도중\n  removeFollowerDone: false,\n  removeFollowerError: null,\n  me: null\n};\nexport const LOAD_MY_INFO_REQUEST = 'LOAD_MY_INFO_REQUEST';\nexport const LOAD_MY_INFO_SUCCESS = 'LOAD_MY_INFO_SUCCESS';\nexport const LOAD_MY_INFO_FAILURE = 'LOAD_MY_INFO_FAILURE';\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport const CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\nexport const CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS';\nexport const CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE';\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\nexport const REMOVE_FOLLOWER_REQUEST = 'REMOVE_FOLLOWER_REQUEST';\nexport const REMOVE_FOLLOWER_SUCCESS = 'REMOVE_FOLLOWER_SUCCESS';\nexport const REMOVE_FOLLOWER_FAILURE = 'REMOVE_FOLLOWER_FAILURE';\nexport const LOAD_FOLLOWINGS_REQUEST = 'LOAD_FOLLOWINGS_REQUEST';\nexport const LOAD_FOLLOWINGS_SUCCESS = 'LOAD_FOLLOWINGS_SUCCESS';\nexport const LOAD_FOLLOWINGS_FAILURE = 'LOAD_FOLLOWINGS_FAILURE';\nexport const LOAD_FOLLOWERS_REQUEST = 'LOAD_FOLLOWERS_REQUEST';\nexport const LOAD_FOLLOWERS_SUCCESS = 'LOAD_FOLLOWERS_SUCCESS';\nexport const LOAD_FOLLOWERS_FAILURE = 'LOAD_FOLLOWERS_FAILURE';\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME'; // action creator\n\nexport const loginRequestAction = data => ({\n  type: LOG_IN_REQUEST,\n  data\n});\nexport const logoutRequestAction = () => ({\n  type: LOG_OUT_REQUEST\n});\n\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case REMOVE_FOLLOWER_REQUEST:\n      draft.removeFollowerLoading = true;\n      draft.removeFollowerError = null;\n      draft.removeFollowerDone = false;\n      break;\n\n    case REMOVE_FOLLOWER_SUCCESS:\n      draft.removeFollowerLoading = false;\n      draft.me.Followers = draft.me.Followers.filter(v => v.id !== action.data.UserId);\n      draft.removeFollowerDone = true;\n      break;\n\n    case REMOVE_FOLLOWER_FAILURE:\n      draft.removeFollowerLoading = false;\n      draft.removeFollowerError = action.error;\n      break;\n\n    case LOAD_FOLLOWINGS_REQUEST:\n      draft.loadFollowingsLoading = true;\n      draft.loadFollowingsError = null;\n      draft.loadFollowingsDone = false;\n      break;\n\n    case LOAD_FOLLOWINGS_SUCCESS:\n      draft.loadFollowingsLoading = false;\n      draft.me.Followings = action.data;\n      draft.loadFollowingsDone = true;\n      break;\n\n    case LOAD_FOLLOWINGS_FAILURE:\n      draft.loadFollowingsLoading = false;\n      draft.loadFollowingsError = action.error;\n      break;\n\n    case LOAD_FOLLOWERS_REQUEST:\n      draft.loadFollowersLoading = true;\n      draft.loadFollowersError = null;\n      draft.loadFollowersDone = false;\n      break;\n\n    case LOAD_FOLLOWERS_SUCCESS:\n      draft.loadFollowersLoading = false;\n      draft.me.Followers = action.data;\n      draft.loadFollowersDone = true;\n      break;\n\n    case LOAD_FOLLOWERS_FAILURE:\n      draft.loadFollowersLoading = false;\n      draft.loadFollowersError = action.error;\n      break;\n\n    case LOAD_MY_INFO_REQUEST:\n      draft.loadUserLoading = true;\n      draft.loadUserError = null;\n      draft.loadUserDone = false;\n      break;\n\n    case LOAD_MY_INFO_SUCCESS:\n      draft.loadUserLoading = false;\n      draft.me = action.data;\n      draft.loadUserDone = true;\n      break;\n\n    case LOAD_MY_INFO_FAILURE:\n      draft.loadUserLoading = false;\n      draft.loadUserError = action.error;\n      break;\n\n    case FOLLOW_REQUEST:\n      draft.followLoading = true;\n      draft.followError = null;\n      draft.followDone = false;\n      break;\n\n    case FOLLOW_SUCCESS:\n      draft.followLoading = false;\n      draft.me.Followings.push({\n        id: action.data.UserId\n      });\n      draft.followDone = true;\n      break;\n\n    case FOLLOW_FAILURE:\n      draft.followLoading = false;\n      draft.followError = action.error;\n      break;\n\n    case UNFOLLOW_REQUEST:\n      draft.unfollowLoading = true;\n      draft.unfollowError = null;\n      draft.unfollowDone = false;\n      break;\n\n    case UNFOLLOW_SUCCESS:\n      draft.unfollowLoading = false;\n      draft.me.Followings = draft.me.Followings.filter(v => v.id !== action.data.UserId);\n      draft.unfollowDone = true;\n      break;\n\n    case UNFOLLOW_FAILURE:\n      draft.unfollowLoading = false;\n      draft.unfollowError = action.error;\n      break;\n\n    case LOG_IN_REQUEST:\n      draft.logInLoading = true;\n      draft.logInError = null;\n      draft.logInDone = false;\n      break;\n\n    case LOG_IN_SUCCESS:\n      draft.logInLoading = false;\n      draft.logInDone = true;\n      draft.me = action.data;\n      break;\n\n    case LOG_IN_FAILURE:\n      draft.logInLoading = false;\n      draft.logInError = action.error;\n      break;\n\n    case LOG_OUT_REQUEST:\n      draft.logOutLoading = true;\n      draft.logOutDone = false;\n      draft.logOutError = null;\n      break;\n\n    case LOG_OUT_SUCCESS:\n      draft.logOutLoading = false;\n      draft.logOutDone = true;\n      draft.me = null;\n      break;\n\n    case LOG_OUT_FAILURE:\n      draft.logOutLoading = false;\n      draft.logOutError = action.error;\n      break;\n\n    case SIGN_UP_REQUEST:\n      draft.signUpLoading = true;\n      draft.signUpDone = false;\n      draft.signUpError = null;\n      break;\n\n    case SIGN_UP_SUCCESS:\n      draft.signUpLoading = false;\n      draft.signUpDone = true;\n      break;\n\n    case SIGN_UP_FAILURE:\n      draft.signUpLoading = false;\n      draft.signUpError = action.error;\n      break;\n\n    case CHANGE_NICKNAME_REQUEST:\n      draft.changeNicknameLoading = true;\n      draft.changeNicknameDone = false;\n      draft.changeNicknameError = null;\n      break;\n\n    case CHANGE_NICKNAME_SUCCESS:\n      draft.me.nickname = action.data.nickname;\n      draft.changeNicknameLoading = false;\n      draft.changeNicknameDone = true;\n      break;\n\n    case CHANGE_NICKNAME_FAILURE:\n      draft.changeNicknameLoading = false;\n      draft.changeNicknameError = action.error;\n      break;\n\n    case ADD_POST_TO_ME:\n      draft.me.Posts.unshift({\n        id: action.data\n      });\n      break;\n\n    case REMOVE_POST_OF_ME:\n      draft.me.Posts = draft.me.Posts.filter(v => v.id !== action.data);\n      break;\n\n    default:\n      break;\n  }\n});\n\nexport default reducer;","map":{"version":3,"sources":["/Users/gimhyeongjin/Desktop/React-NodeBird/prepare/front/reducers/user.js"],"names":["produce","initialState","loadUserLoading","loadUserDone","loadUserError","followLoading","followDone","followError","unfollowLoading","unfollowDone","unfollowError","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","signUpLoading","signUpDone","signUpError","changeNicknameLoading","changeNicknameDone","changeNicknameError","loadFollowingsLoading","loadFollowingsDone","loadFollowingsError","loadFollowersLoading","loadFollowersDone","loadFollowersError","removeFollowerLoading","removeFollowerDone","removeFollowerError","me","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","LOAD_MY_INFO_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","REMOVE_FOLLOWER_REQUEST","REMOVE_FOLLOWER_SUCCESS","REMOVE_FOLLOWER_FAILURE","LOAD_FOLLOWINGS_REQUEST","LOAD_FOLLOWINGS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWERS_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","loginRequestAction","data","type","logoutRequestAction","reducer","state","action","draft","Followers","filter","v","id","UserId","error","Followings","push","nickname","Posts","unshift"],"mappings":"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","sourcesContent":["import produce from 'immer';\n\nexport const initialState = {\n  loadUserLoading: false, // 유저 정보 가져오기 시도중\n  loadUserDone: false,\n  loadUserError: null,\n  followLoading: false, // 팔로우 시도중\n  followDone: false,\n  followError: null,\n  unfollowLoading: false, // 언팔로우 시도중\n  unfollowDone: false,\n  unfollowError: null,\n  logInLoading: false, // 로그인 시도중\n  logInDone: false,\n  logInError: null,\n  logOutLoading: false, // 로그아웃 시도중\n  logOutDone: false,\n  logOutError: null,\n  signUpLoading: false, // 회원가입 시도중\n  signUpDone: false,\n  signUpError: null,\n  changeNicknameLoading: false, // 닉네임 변경 시도중\n  changeNicknameDone: false,\n  changeNicknameError: null,\n  loadFollowingsLoading: false, // 팔로윙 목록 불러오기 시도중\n  loadFollowingsDone: false,\n  loadFollowingsError: null,\n  loadFollowersLoading: false, // 팔로워 목록 불러오기 시도중\n  loadFollowersDone: false,\n  loadFollowersError: null,\n  removeFollowerLoading: false, // 팔로워 제거 시도중\n  removeFollowerDone: false,\n  removeFollowerError: null,\n  me: null,\n};\n\nexport const LOAD_MY_INFO_REQUEST = 'LOAD_MY_INFO_REQUEST';\nexport const LOAD_MY_INFO_SUCCESS = 'LOAD_MY_INFO_SUCCESS';\nexport const LOAD_MY_INFO_FAILURE = 'LOAD_MY_INFO_FAILURE';\n\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\n\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\n\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\n\nexport const CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\nexport const CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS';\nexport const CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE';\n\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\n\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\n\nexport const REMOVE_FOLLOWER_REQUEST = 'REMOVE_FOLLOWER_REQUEST';\nexport const REMOVE_FOLLOWER_SUCCESS = 'REMOVE_FOLLOWER_SUCCESS';\nexport const REMOVE_FOLLOWER_FAILURE = 'REMOVE_FOLLOWER_FAILURE';\n\nexport const LOAD_FOLLOWINGS_REQUEST = 'LOAD_FOLLOWINGS_REQUEST';\nexport const LOAD_FOLLOWINGS_SUCCESS = 'LOAD_FOLLOWINGS_SUCCESS';\nexport const LOAD_FOLLOWINGS_FAILURE = 'LOAD_FOLLOWINGS_FAILURE';\n\nexport const LOAD_FOLLOWERS_REQUEST = 'LOAD_FOLLOWERS_REQUEST';\nexport const LOAD_FOLLOWERS_SUCCESS = 'LOAD_FOLLOWERS_SUCCESS';\nexport const LOAD_FOLLOWERS_FAILURE = 'LOAD_FOLLOWERS_FAILURE';\n\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\n\n// action creator\nexport const loginRequestAction = (data) => ({\n  type: LOG_IN_REQUEST,\n  data,\n});\n\nexport const logoutRequestAction = () => ({\n  type: LOG_OUT_REQUEST,\n});\n\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\n  switch (action.type) {\n    case REMOVE_FOLLOWER_REQUEST:\n      draft.removeFollowerLoading = true;\n      draft.removeFollowerError = null;\n      draft.removeFollowerDone = false;\n      break;\n    case REMOVE_FOLLOWER_SUCCESS:\n      draft.removeFollowerLoading = false;\n      draft.me.Followers = draft.me.Followers.filter((v) => v.id !== action.data.UserId);\n      draft.removeFollowerDone = true;\n      break;\n    case REMOVE_FOLLOWER_FAILURE:\n      draft.removeFollowerLoading = false;\n      draft.removeFollowerError = action.error;\n      break;\n    case LOAD_FOLLOWINGS_REQUEST:\n      draft.loadFollowingsLoading = true;\n      draft.loadFollowingsError = null;\n      draft.loadFollowingsDone = false;\n      break;\n    case LOAD_FOLLOWINGS_SUCCESS:\n      draft.loadFollowingsLoading = false;\n      draft.me.Followings = action.data;\n      draft.loadFollowingsDone = true;\n      break;\n    case LOAD_FOLLOWINGS_FAILURE:\n      draft.loadFollowingsLoading = false;\n      draft.loadFollowingsError = action.error;\n      break;\n    case LOAD_FOLLOWERS_REQUEST:\n      draft.loadFollowersLoading = true;\n      draft.loadFollowersError = null;\n      draft.loadFollowersDone = false;\n      break;\n    case LOAD_FOLLOWERS_SUCCESS:\n      draft.loadFollowersLoading = false;\n      draft.me.Followers = action.data;\n      draft.loadFollowersDone = true;\n      break;\n    case LOAD_FOLLOWERS_FAILURE:\n      draft.loadFollowersLoading = false;\n      draft.loadFollowersError = action.error;\n      break;\n    case LOAD_MY_INFO_REQUEST:\n      draft.loadUserLoading = true;\n      draft.loadUserError = null;\n      draft.loadUserDone = false;\n      break;\n    case LOAD_MY_INFO_SUCCESS:\n      draft.loadUserLoading = false;\n      draft.me = action.data;\n      draft.loadUserDone = true;\n      break;\n    case LOAD_MY_INFO_FAILURE:\n      draft.loadUserLoading = false;\n      draft.loadUserError = action.error;\n      break;\n    case FOLLOW_REQUEST:\n      draft.followLoading = true;\n      draft.followError = null;\n      draft.followDone = false;\n      break;\n    case FOLLOW_SUCCESS:\n      draft.followLoading = false;\n      draft.me.Followings.push({ id: action.data.UserId });\n      draft.followDone = true;\n      break;\n    case FOLLOW_FAILURE:\n      draft.followLoading = false;\n      draft.followError = action.error;\n      break;\n    case UNFOLLOW_REQUEST:\n      draft.unfollowLoading = true;\n      draft.unfollowError = null;\n      draft.unfollowDone = false;\n      break;\n    case UNFOLLOW_SUCCESS:\n      draft.unfollowLoading = false;\n      draft.me.Followings = draft.me.Followings.filter((v) => v.id !== action.data.UserId);\n      draft.unfollowDone = true;\n      break;\n    case UNFOLLOW_FAILURE:\n      draft.unfollowLoading = false;\n      draft.unfollowError = action.error;\n      break;\n    case LOG_IN_REQUEST:\n      draft.logInLoading = true;\n      draft.logInError = null;\n      draft.logInDone = false;\n      break;\n    case LOG_IN_SUCCESS:\n      draft.logInLoading = false;\n      draft.logInDone = true;\n      draft.me = action.data;\n      break;\n    case LOG_IN_FAILURE:\n      draft.logInLoading = false;\n      draft.logInError = action.error;\n      break;\n    case LOG_OUT_REQUEST:\n      draft.logOutLoading = true;\n      draft.logOutDone = false;\n      draft.logOutError = null;\n      break;\n    case LOG_OUT_SUCCESS:\n      draft.logOutLoading = false;\n      draft.logOutDone = true;\n      draft.me = null;\n      break;\n    case LOG_OUT_FAILURE:\n      draft.logOutLoading = false;\n      draft.logOutError = action.error;\n      break;\n    case SIGN_UP_REQUEST:\n      draft.signUpLoading = true;\n      draft.signUpDone = false;\n      draft.signUpError = null;\n      break;\n    case SIGN_UP_SUCCESS:\n      draft.signUpLoading = false;\n      draft.signUpDone = true;\n      break;\n    case SIGN_UP_FAILURE:\n      draft.signUpLoading = false;\n      draft.signUpError = action.error;\n      break;\n    case CHANGE_NICKNAME_REQUEST:\n      draft.changeNicknameLoading = true;\n      draft.changeNicknameDone = false;\n      draft.changeNicknameError = null;\n      break;\n    case CHANGE_NICKNAME_SUCCESS:\n      draft.me.nickname = action.data.nickname;\n      draft.changeNicknameLoading = false;\n      draft.changeNicknameDone = true;\n      break;\n    case CHANGE_NICKNAME_FAILURE:\n      draft.changeNicknameLoading = false;\n      draft.changeNicknameError = action.error;\n      break;\n    case ADD_POST_TO_ME:\n      draft.me.Posts.unshift({ id: action.data });\n      break;\n    case REMOVE_POST_OF_ME:\n      draft.me.Posts = draft.me.Posts.filter((v) => v.id !== action.data);\n      break;\n    default:\n      break;\n  }\n});\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}