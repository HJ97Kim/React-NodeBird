{"ast":null,"code":"import axios from 'axios';\nimport { all, fork, put, takeLatest, throttle, call } from 'redux-saga/effects';\nimport { LOAD_POST_SUCCESS, LOAD_POST_FAILURE, LOAD_POST_REQUEST, LOAD_USER_POSTS_SUCCESS, LOAD_USER_POSTS_FAILURE, LOAD_USER_POSTS_REQUEST, LOAD_HASHTAG_POSTS_SUCCESS, LOAD_HASHTAG_POSTS_FAILURE, LOAD_HASHTAG_POSTS_REQUEST, LOAD_POSTS_SUCCESS, LOAD_POSTS_FAILURE, LOAD_POSTS_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE, REMOVE_POST_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, LIKE_POST_SUCCESS, LIKE_POST_FAILURE, LIKE_POST_REQUEST, UNLIKE_POST_SUCCESS, UNLIKE_POST_FAILURE, UNLIKE_POST_REQUEST, UPLOAD_IMAGES_SUCCESS, UPLOAD_IMAGES_FAILURE, UPLOAD_IMAGES_REQUEST, RETWEET_SUCCESS, RETWEET_FAILURE, RETWEET_REQUEST } from '../reducers/post';\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from '../reducers/user';\n\nfunction retweetAPI(data) {\n  return axios.post(`/post/${data}/retweet`, data);\n}\n\nfunction* retweet(action) {\n  try {\n    const result = yield call(retweetAPI, action.data);\n    yield put({\n      type: RETWEET_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.log(err);\n    yield put({\n      type: RETWEET_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction uploadImagesAPI(data) {\n  return axios.post('/post/images', data);\n}\n\nfunction* uploadImages(action) {\n  try {\n    const result = yield call(uploadImagesAPI, action.data);\n    yield put({\n      type: UPLOAD_IMAGES_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.log(err);\n    yield put({\n      type: UPLOAD_IMAGES_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction likePostAPI(data) {\n  return axios.patch(`/post/${data}/like`);\n}\n\nfunction* likePost(action) {\n  try {\n    const result = yield call(likePostAPI, action.data);\n    yield put({\n      type: LIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.log(err);\n    yield put({\n      type: LIKE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unlikePostAPI(data) {\n  return axios.delete(`/post/${data}/like`);\n}\n\nfunction* unlikePost(action) {\n  try {\n    const result = yield call(unlikePostAPI, action.data);\n    yield put({\n      type: UNLIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: UNLIKE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadPostAPI(data) {\n  return axios.get(`/post/${data}`);\n}\n\nfunction* loadPost(action) {\n  try {\n    const result = yield call(loadPostAPI, action.data);\n    yield put({\n      type: LOAD_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadHashtagPostsAPI(data, lastId) {\n  return axios.get(`/hashtag/${data}?lastId=${lastId || 0}`);\n}\n\nfunction* loadHashtagPosts(action) {\n  try {\n    const result = yield call(loadHashtagPostsAPI, action.data, action.lastId);\n    yield put({\n      type: LOAD_HASHTAG_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_HASHTAG_POSTS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadUserPostsAPI(data, lastId) {\n  return axios.get(`/user/${data}/posts?lastId=${lastId || 0}`);\n}\n\nfunction* loadUserPosts(action) {\n  try {\n    const result = yield call(loadUserPostsAPI, action.data, action.lastId);\n    yield put({\n      type: LOAD_USER_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_USER_POSTS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadPostsAPI(lastId) {\n  return axios.get(`/posts?lastId=${lastId || 0}`);\n}\n\nfunction* loadPosts(action) {\n  try {\n    const result = yield call(loadPostsAPI, action.lastId);\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction addPostAPI(data) {\n  return axios.post('/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.delete(`/post/${data}`);\n}\n\nfunction* removePost(action) {\n  try {\n    const result = yield call(removePostAPI, action.data);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data\n    });\n  } catch (err) {\n    console.log(err);\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchRetweet() {\n  yield takeLatest(RETWEET_REQUEST, retweet);\n}\n\nfunction* watchUploadImages() {\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\n}\n\nfunction* watchLikePost() {\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\n}\n\nfunction* watchUnlikePost() {\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\n}\n\nfunction* watchLoadPost() {\n  yield takeLatest(LOAD_POST_REQUEST, loadPost);\n}\n\nfunction* watchLoadUserPosts() {\n  yield throttle(5000, LOAD_USER_POSTS_REQUEST, loadUserPosts);\n}\n\nfunction* watchLoadHashtagPosts() {\n  yield throttle(5000, LOAD_HASHTAG_POSTS_REQUEST, loadHashtagPosts);\n}\n\nfunction* watchLoadPosts() {\n  yield throttle(5000, LOAD_POSTS_REQUEST, loadPosts);\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchRetweet), fork(watchUploadImages), fork(watchLikePost), fork(watchUnlikePost), fork(watchAddPost), fork(watchLoadPost), fork(watchLoadUserPosts), fork(watchLoadHashtagPosts), fork(watchLoadPosts), fork(watchRemovePost), fork(watchAddComment)]);\n}","map":{"version":3,"sources":["/Users/gimhyeongjin/Desktop/React-NodeBird/prepare/front/sagas/post.js"],"names":["axios","all","fork","put","takeLatest","throttle","call","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","LOAD_POST_REQUEST","LOAD_USER_POSTS_SUCCESS","LOAD_USER_POSTS_FAILURE","LOAD_USER_POSTS_REQUEST","LOAD_HASHTAG_POSTS_SUCCESS","LOAD_HASHTAG_POSTS_FAILURE","LOAD_HASHTAG_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","LOAD_POSTS_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","REMOVE_POST_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","ADD_COMMENT_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","LIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","UPLOAD_IMAGES_REQUEST","RETWEET_SUCCESS","RETWEET_FAILURE","RETWEET_REQUEST","ADD_POST_TO_ME","REMOVE_POST_OF_ME","retweetAPI","data","post","retweet","action","result","type","err","console","log","error","response","uploadImagesAPI","uploadImages","likePostAPI","patch","likePost","unlikePostAPI","delete","unlikePost","loadPostAPI","get","loadPost","loadHashtagPostsAPI","lastId","loadHashtagPosts","loadUserPostsAPI","loadUserPosts","loadPostsAPI","loadPosts","addPostAPI","addPost","id","removePostAPI","removePost","addCommentAPI","postId","addComment","watchRetweet","watchUploadImages","watchLikePost","watchUnlikePost","watchLoadPost","watchLoadUserPosts","watchLoadHashtagPosts","watchLoadPosts","watchAddPost","watchRemovePost","watchAddComment","postSaga"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { all, fork, put, takeLatest, throttle, call } from 'redux-saga/effects';\nimport {\n  LOAD_POST_SUCCESS, LOAD_POST_FAILURE, LOAD_POST_REQUEST,\n  LOAD_USER_POSTS_SUCCESS, LOAD_USER_POSTS_FAILURE, LOAD_USER_POSTS_REQUEST,\n  LOAD_HASHTAG_POSTS_SUCCESS, LOAD_HASHTAG_POSTS_FAILURE, LOAD_HASHTAG_POSTS_REQUEST,\n  LOAD_POSTS_SUCCESS, LOAD_POSTS_FAILURE, LOAD_POSTS_REQUEST,\n  ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST,\n  REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE, REMOVE_POST_REQUEST,\n  ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST,\n  LIKE_POST_SUCCESS, LIKE_POST_FAILURE, LIKE_POST_REQUEST,\n  UNLIKE_POST_SUCCESS, UNLIKE_POST_FAILURE, UNLIKE_POST_REQUEST,\n  UPLOAD_IMAGES_SUCCESS, UPLOAD_IMAGES_FAILURE, UPLOAD_IMAGES_REQUEST,\n  RETWEET_SUCCESS, RETWEET_FAILURE, RETWEET_REQUEST,\n} from '../reducers/post';\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from '../reducers/user';\n\nfunction retweetAPI(data) {\n  return axios.post(`/post/${data}/retweet`, data);\n}\n\nfunction* retweet(action) {\n  try {\n    const result = yield call(retweetAPI, action.data);\n    yield put({\n      type: RETWEET_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.log(err);\n    yield put({\n      type: RETWEET_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction uploadImagesAPI(data) {\n  return axios.post('/post/images', data);\n}\n\nfunction* uploadImages(action) {\n  try {\n    const result = yield call(uploadImagesAPI, action.data);\n    yield put({\n      type: UPLOAD_IMAGES_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.log(err);\n    yield put({\n      type: UPLOAD_IMAGES_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction likePostAPI(data) {\n  return axios.patch(`/post/${data}/like`);\n}\n\nfunction* likePost(action) {\n  try {\n    const result = yield call(likePostAPI, action.data);\n    yield put({\n      type: LIKE_POST_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.log(err);\n    yield put({\n      type: LIKE_POST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction unlikePostAPI(data) {\n  return axios.delete(`/post/${data}/like`);\n}\n\nfunction* unlikePost(action) {\n  try {\n    const result = yield call(unlikePostAPI, action.data);\n    yield put({\n      type: UNLIKE_POST_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: UNLIKE_POST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction loadPostAPI(data) {\n  return axios.get(`/post/${data}`);\n}\n\nfunction* loadPost(action) {\n  try {\n    const result = yield call(loadPostAPI, action.data);\n    yield put({\n      type: LOAD_POST_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_POST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction loadHashtagPostsAPI(data, lastId) {\n  return axios.get(`/hashtag/${data}?lastId=${lastId || 0}`);\n}\n\nfunction* loadHashtagPosts(action) {\n  try {\n    const result = yield call(loadHashtagPostsAPI, action.data, action.lastId);\n    yield put({\n      type: LOAD_HASHTAG_POSTS_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_HASHTAG_POSTS_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction loadUserPostsAPI(data, lastId) {\n  return axios.get(`/user/${data}/posts?lastId=${lastId || 0}`);\n}\n\nfunction* loadUserPosts(action) {\n  try {\n    const result = yield call(loadUserPostsAPI, action.data, action.lastId);\n    yield put({\n      type: LOAD_USER_POSTS_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_USER_POSTS_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction loadPostsAPI(lastId) {\n  return axios.get(`/posts?lastId=${lastId || 0}`);\n}\n\nfunction* loadPosts(action) {\n  try {\n    const result = yield call(loadPostsAPI, action.lastId);\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction addPostAPI(data) {\n  return axios.post('/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data,\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.delete(`/post/${data}`);\n}\n\nfunction* removePost(action) {\n  try {\n    const result = yield call(removePostAPI, action.data);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: result.data,\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data,\n    });\n  } catch (err) {\n    console.log(err);\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* watchRetweet() {\n  yield takeLatest(RETWEET_REQUEST, retweet);\n}\n\nfunction* watchUploadImages() {\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\n}\n\nfunction* watchLikePost() {\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\n}\n\nfunction* watchUnlikePost() {\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\n}\n\nfunction* watchLoadPost() {\n  yield takeLatest(LOAD_POST_REQUEST, loadPost);\n}\n\nfunction* watchLoadUserPosts() {\n  yield throttle(5000, LOAD_USER_POSTS_REQUEST, loadUserPosts);\n}\n\nfunction* watchLoadHashtagPosts() {\n  yield throttle(5000, LOAD_HASHTAG_POSTS_REQUEST, loadHashtagPosts);\n}\n\nfunction* watchLoadPosts() {\n  yield throttle(5000, LOAD_POSTS_REQUEST, loadPosts);\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([\n    fork(watchRetweet),\n    fork(watchUploadImages),\n    fork(watchLikePost),\n    fork(watchUnlikePost),\n    fork(watchAddPost),\n    fork(watchLoadPost),\n    fork(watchLoadUserPosts),\n    fork(watchLoadHashtagPosts),\n    fork(watchLoadPosts),\n    fork(watchRemovePost),\n    fork(watchAddComment),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}